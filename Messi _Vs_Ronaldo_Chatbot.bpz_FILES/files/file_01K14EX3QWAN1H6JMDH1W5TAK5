{
  "fileKey": "deployments/1750885169016.json",
  "settings": {
    "defaultLanguage": "en",
    "languages": [
      "en"
    ],
    "description": "",
    "id": "49165123-5810-4ed6-8326-a302859ce537",
    "inactivityTimeout": 30,
    "botVariables": [],
    "userVariables": [],
    "nodeRepetitionLimit": 3,
    "configVariables": {},
    "cognitiveConfigs": {
      "openAi": {}
    },
    "useLlmz": true,
    "defaultBestModel": "openai__gpt-4o-2024-11-20",
    "defaultFastModel": "openai__gpt-4o-mini-2024-07-18",
    "useClient": true,
    "llmzVersion": "01-Oct-2024",
    "autonomousModel": "best-model",
    "fallbackModel": "google-ai__models/gemini-2.0-flash"
  },
  "agents": {
    "SummaryAgent": {
      "enabled": true,
      "config": {
        "summaryMaxTokens": 100
      }
    },
    "TranslatorAgent": {
      "config": {
        "detectLanguage": true
      }
    },
    "KnowledgeAgent": {
      "enabled": true,
      "config": {
        "answerManually": true,
        "context": "Summary of the conversation:\n\"\"\"\n{{conversation.SummaryAgent.summary}}\n\"\"\"\n\nTranscript:\n\"\"\"\n{{conversation.SummaryAgent.transcript}}\n\"\"\"",
        "bestModel": "gpt-4-turbo",
        "strategy": "hybrid",
        "chunks": 50
      }
    },
    "PersonalityAgent": {
      "config": {
        "personality": ""
      }
    },
    "VisionAgent": {
      "enabled": true,
      "config": {
        "extractionEnabled": true
      }
    }
  },
  "flows": [
    {
      "id": "wf-error",
      "name": "Error",
      "startNode": "nd-98dc0bcc87",
      "variables": [],
      "links": [
        {
          "id": "edg-1cb5862648",
          "source": "nd-98dc0bcc87",
          "sourcePort": "trs-02c7129430",
          "target": "nd-58fca56e01"
        },
        {
          "id": "edg-1c28c96d6a",
          "source": "nd-58fca56e01",
          "sourcePort": "nd-58fca56e01",
          "target": "nd-e05f59dd66"
        }
      ],
      "nodes": [
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">‚õîÔ∏è When something goes wrong</span></strong></p><p><br>This workflow is executed when there's an <strong>unexpected error</strong> in one of the other workflows.</p><p></p><p>You can use this to inform the user of the situation before ending the conversation.</p>",
          "type": "comment",
          "id": "nd-8ff3d7d295",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 148,
          "width": 401,
          "x": 90,
          "y": -45
        },
        {
          "instructions": [
            {
              "id": "ins-2762f70004",
              "type": "content",
              "content": {
                "type": "text",
                "text": {
                  "staticValue": "Sorry, an error occurred. Please try again later",
                  "dynamicValue": "",
                  "valueType": "static"
                },
                "typing": {
                  "valueType": "static",
                  "staticValue": true
                }
              },
              "nodeId": "nd-58fca56e01",
              "transitions": []
            }
          ],
          "defaultTransition": {
            "targetNodeId": "nd-e05f59dd66"
          },
          "type": "standard",
          "id": "nd-58fca56e01",
          "name": "Handler",
          "deletable": true,
          "x": 450,
          "y": 120
        },
        {
          "id": "nd-98dc0bcc87",
          "name": "On_Error",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-02c7129430",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-58fca56e01"
              },
              "transitions": [],
              "nodeId": "nd-98dc0bcc87"
            }
          ],
          "x": 90,
          "y": 120
        },
        {
          "id": "nd-e05f59dd66",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-945140a646",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": [],
              "nodeId": "nd-e05f59dd66"
            }
          ],
          "x": 810,
          "y": 120
        }
      ]
    },
    {
      "id": "wf-timeout",
      "name": "Timeout",
      "startNode": "nd-9f7f3268ac",
      "variables": [],
      "links": [
        {
          "id": "edg-b0d2adcd13",
          "source": "nd-e6c012a652",
          "sourcePort": "nd-e6c012a652",
          "target": "nd-199fdcf439"
        },
        {
          "id": "edg-6d17a0591b",
          "source": "nd-9f7f3268ac",
          "sourcePort": "trs-0c7a9a0003",
          "target": "nd-e6c012a652"
        }
      ],
      "nodes": [
        {
          "instructions": [],
          "defaultTransition": {
            "targetNodeId": "nd-199fdcf439"
          },
          "type": "standard",
          "id": "nd-e6c012a652",
          "name": "Handler",
          "deletable": true,
          "x": 435,
          "y": 105
        },
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">‚åõÔ∏è When conversation times out</span></strong></p><p><br>This workflow is executed when the conversation <strong>times out</strong> before it had time to flow to an <strong>End Node</strong>.</p><p></p><p>The <strong>Timeout Delay</strong> is configurable in the <strong>Chatbot Settings.</strong></p><p></p><p>You can use this to inform the user of the situation before ending the conversation.</p>",
          "type": "comment",
          "id": "nd-441efa6c42",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 173,
          "width": 401,
          "x": 105,
          "y": -90
        },
        {
          "id": "nd-9f7f3268ac",
          "name": "On_Timeout",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-0c7a9a0003",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-e6c012a652"
              },
              "transitions": []
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-199fdcf439",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-bf76943d55",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": []
            }
          ],
          "x": 795,
          "y": 105
        }
      ]
    },
    {
      "id": "wf-conversation-end",
      "name": "Conversation End",
      "startNode": "nd-c0d3bd2c92",
      "variables": [],
      "links": [
        {
          "id": "edg-3cb8028ff6",
          "source": "nd-c0d3bd2c92",
          "sourcePort": "trs-92c6f93b0c",
          "target": "nd-2db7499cc6"
        },
        {
          "id": "edg-8a88f687a0",
          "source": "nd-2db7499cc6",
          "sourcePort": "nd-2db7499cc6",
          "target": "nd-d0c2a6be81"
        }
      ],
      "nodes": [
        {
          "instructions": [],
          "defaultTransition": {
            "targetNodeId": "nd-d0c2a6be81"
          },
          "type": "standard",
          "id": "nd-2db7499cc6",
          "name": "Handler",
          "deletable": true,
          "x": 420,
          "y": 105
        },
        {
          "comment": "<p><strong><span style=\"font-size: 18px\">üëã Before Conversation Ends</span></strong></p><p><br>This workflow is executed when right before the conversation <strong>Ends Explicitly.</strong></p><p></p><p>An <strong>Explicit Ending</strong> happens when a workflow transitions on an <strong>End Node</strong>.</p>",
          "type": "comment",
          "id": "nd-6d5d3f41dd",
          "name": "Comment1",
          "deletable": true,
          "instructions": [],
          "height": 148,
          "width": 461,
          "x": 105,
          "y": -45
        },
        {
          "id": "nd-c0d3bd2c92",
          "name": "On_Explicit_Ending",
          "type": "entry",
          "deletable": false,
          "variables": [],
          "instructions": [
            {
              "id": "trs-92c6f93b0c",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-2db7499cc6"
              },
              "transitions": []
            }
          ],
          "x": 100,
          "y": 100
        },
        {
          "id": "nd-d0c2a6be81",
          "name": "End",
          "type": "end",
          "variables": [],
          "deletable": false,
          "instructions": [
            {
              "id": "trs-7004dbb2b6",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": []
            }
          ],
          "x": 780,
          "y": 105
        }
      ]
    },
    {
      "topicId": "tpc-global",
      "id": "wf-main",
      "name": "Main",
      "startNode": "nd-2bb9db230d",
      "variables": [],
      "links": [],
      "nodes": [
        {
          "id": "nd-2bb9db230d",
          "name": "Start",
          "type": "start",
          "deletable": false,
          "instructions": [
            {
              "id": "trs-8b0779edc5",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "nd-54aa0c19de"
              },
              "transitions": [],
              "nodeId": "nd-2bb9db230d"
            }
          ],
          "x": -105,
          "y": -180,
          "kbPriority": {
            "enabled": false,
            "searchScope": "specific",
            "kbs": []
          }
        },
        {
          "id": "nd-80ac4ff158",
          "name": "End",
          "type": "end",
          "deletable": false,
          "instructions": [
            {
              "id": "trs-0260f5e672",
              "type": "transition",
              "condition": {
                "type": "expression",
                "payload": "true"
              },
              "destination": {
                "node": "END"
              },
              "transitions": [],
              "nodeId": "nd-80ac4ff158"
            }
          ],
          "x": 420,
          "y": -60
        },
        {
          "type": "autonomous",
          "deletable": true,
          "x": 90,
          "y": -240,
          "instructions": [
            {
              "id": "ins-1465ce0650",
              "agentId": "KnowledgeAgent",
              "toolId": "knowledge-query",
              "toolType": "search",
              "type": "autonomous",
              "label": "Search Knowledge Bases",
              "category": "Knowledge Bases",
              "nodeId": "nd-54aa0c19de",
              "transitions": [],
              "description": "Searches for information in the official knowledge bases.",
              "kbs": {
                "valueType": "static",
                "staticValue": []
              },
              "advanced": {
                "mode": "breadcrumb",
                "contextDepth": 2,
                "maxTokens": 20
              }
            }
          ],
          "id": "nd-54aa0c19de",
          "name": "AutonomousNode",
          "writableVariables": [],
          "allowConversation": true,
          "guidelines": {
            "valueType": "dynamic",
            "dynamicValue": "## Identity\nYou are the Customer Support AI Agent for [COMPANY NAME]. Your role is to interact with customers, address their inquiries, and provide assistance with common support topics.\n\n## Scope\n- Focus on customer inquiries about orders, billing, account issues, and general support.\n- Do not handle advanced technical support or sensitive financial issues.\n- Redirect or escalate issues outside your expertise to a human agent.\n\n## Responsibility\n- Initiate interactions with a friendly greeting.\n- Guide the conversation based on customer needs.\n- Provide accurate and concise information.\n- Escalate to a human agent when customer inquiries exceed your capabilities.\n\n## Response Style\n- Maintain a friendly, clear, and professional tone.\n- Keep responses brief and to the point.\n- Use buttons for quick replies and easy navigation whenever possible.\n\n## Ability\n- Delegate specialized tasks to AI-Associates or escalate to a human when needed.\n\n## Guardrails\n- **Privacy**: Respect customer privacy; only request personal data if absolutely necessary.\n- **Accuracy**: Provide verified and factual responses coming from Knowledge Base or official sources. Avoid speculation.\n\n## Instructions\n- **Greeting**: Start every conversation with a friendly welcome.  \n  _Example_: \"Hi, welcome to [COMPANY NAME] Support! How can I help you today?\"\n\n- **Escalation**: When a customer query becomes too complex or sensitive, notify the customer that you'll escalate the conversation to a human agent.  \n  _Example_: \"I‚Äôm having trouble resolving this. Let me get a human agent to assist you further.\"\n\n- **Closing**: End interactions by confirming that the customer's issue has been addressed.  \n  _Example_: \"Is there anything else I can help you with today?\""
          }
        },
        {
          "type": "comment",
          "deletable": true,
          "x": 75,
          "y": -435,
          "instructions": [],
          "comment": "<p>This is the default node. It can search the web.</p><p></p><p>Change instructions and add new sub-workflows to start changing its behaviour.</p><p></p><p>Try asking \"What's Botpress?\"</p>",
          "id": "nd-9c5f9a0939",
          "name": "Comment1",
          "height": 163,
          "width": 296
        },
        {
          "type": "video",
          "deletable": true,
          "instructions": [],
          "x": -465,
          "y": -555,
          "youtubeUrl": "https://www.youtube.com/watch?v=Hyq_Bwn2W5M",
          "id": "nd-0a8441430e",
          "name": "Video1"
        }
      ],
      "parentFolder": "root"
    }
  ],
  "actions": [],
  "hooks": [],
  "models": [],
  "list_entities": [],
  "pattern_entities": [],
  "knowledge_base": [
    {
      "dataSources": [
        {
          "created_on": 1722900679385,
          "data": {},
          "disabled": false,
          "id": "ds-default",
          "type": "file-api"
        },
        {
          "created_on": 1722900679385,
          "data": {
            "html": ""
          },
          "disabled": false,
          "id": "ds-default-rich-text",
          "type": "rich-text"
        },
        {
          "created_on": 1722900679385,
          "data": {},
          "disabled": false,
          "id": "ds-default-website",
          "type": "web-page"
        }
      ],
      "description": "This is about New KB1",
      "id": "kb-2f0a7ea639",
      "name": "Default Knowledge Base",
      "parentFolder": "root"
    }
  ],
  "folders": [],
  "tables": {
    "table_01JYME6WCV79NC9R33HY7H3DTQ": {
      "id": "table_01JYME6WCV79NC9R33HY7H3DTQ",
      "name": "RouterAgentTable",
      "factor": 1,
      "frozen": false,
      "tags": {
        "role": "agents/router/intents",
        "agent": "RouterAgent",
        "system": "true"
      },
      "createdAt": "2025-02-26T18:41:06.737Z",
      "updatedAt": "2025-02-26T18:41:06.737Z",
      "createdBy": "user:1b53a4f2-4862-4985-8bee-39074c5359c7",
      "updatedBy": null,
      "isComputeEnabled": false,
      "schema": {
        "type": "object",
        "x-zui": {},
        "required": [
          "phrase",
          "intentId",
          "phraseId"
        ],
        "properties": {
          "phrase": {
            "type": "string",
            "x-zui": {
              "index": 0,
              "searchable": true
            }
          },
          "intentId": {
            "type": "string",
            "x-zui": {
              "index": 1,
              "searchable": true
            }
          },
          "phraseId": {
            "type": "string",
            "x-zui": {
              "index": 2,
              "searchable": true
            }
          }
        },
        "additionalProperties": true
      },
      "parentFolder": "root",
      "selectors": []
    },
    "table_01JYME6WEND13640SJZ8YAZF3X": {
      "id": "table_01JYME6WEND13640SJZ8YAZF3X",
      "name": "Int_Connor_Conversations_Table",
      "factor": 30,
      "frozen": true,
      "tags": {
        "origin": "integration",
        "purpose": "Conversations",
        "version": "Dec-2024",
        "integration": "Int_connor",
        "x-studio-icon": "lucide://MessagesSquare",
        "x-studio-color": "grass",
        "x-studio-title": "Conversations",
        "x-studio-readonly": "true",
        "x-studio-description": "Table for analyzing conversations"
      },
      "createdAt": "2025-02-26T18:41:07.028Z",
      "updatedAt": "2025-02-26T18:41:07.028Z",
      "createdBy": "user:1b53a4f2-4862-4985-8bee-39074c5359c7",
      "updatedBy": null,
      "isComputeEnabled": true,
      "schema": {
        "type": "object",
        "x-zui": {},
        "required": [
          "topics",
          "summary",
          "resolved",
          "transcript",
          "escalations",
          "conversationId"
        ],
        "properties": {
          "topics": {
            "type": "array",
            "items": {
              "type": "string",
              "x-zui": {}
            },
            "x-zui": {
              "index": 0,
              "title": "Topics",
              "computed": {
                "action": "ai",
                "prompt": "Identify the topics mentioned by the user in the provided transcript. Focus only on user-initiated topics relevant to their needs (e.g., billing issues, technical troubleshooting, product recommendations, account setup, feature requests, complaints, or cancellation inquiries). \nTranscript:\n\n{{transcript}}",
                "dependencies": [
                  "transcript"
                ]
              },
              "searchable": true
            },
            "nullable": true,
            "description": "Optional. An array of topics or themes discussed during the conversation."
          },
          "summary": {
            "type": "string",
            "x-zui": {
              "index": 1,
              "title": "Summary",
              "computed": {
                "action": "ai",
                "prompt": "Summarize the provided transcript.\nHere's the transcript:\n\n{{transcript}}",
                "dependencies": [
                  "transcript"
                ]
              },
              "searchable": true
            },
            "nullable": true,
            "description": "A brief summary of the conversation's content."
          },
          "resolved": {
            "type": "boolean",
            "x-zui": {
              "index": 2,
              "title": "Resolved",
              "computed": {
                "action": "ai",
                "prompt": "Based on the transcript decide whether the users queries were resolved or not by the end of the chat. If not resolved respond with `false`.\nHere's the transcript:\n\n{{transcript}}",
                "dependencies": [
                  "transcript"
                ]
              },
              "searchable": true
            },
            "nullable": true,
            "description": "A boolean indicating whether the customer's issue was resolved by the end of the chat."
          },
          "sentiment": {
            "enum": [
              "very positive",
              "positive",
              "neutral",
              "negative",
              "very negative"
            ],
            "type": "string",
            "x-zui": {
              "index": 3,
              "title": "Sentiment",
              "computed": {
                "action": "ai",
                "prompt": "Based on the transcript decide the overall sentiment inferred from the conversation (from the following - very positive, positive, neutral, negative, very negative).\nHere's the transcript:\n\n{{transcript}}",
                "dependencies": [
                  "transcript"
                ]
              },
              "searchable": true
            },
            "nullable": true,
            "description": "Optional. The overall sentiment inferred from the conversation (e.g., positive, neutral, negative)."
          },
          "transcript": {
            "type": "array",
            "items": {
              "type": "object",
              "x-zui": {},
              "required": [
                "sender",
                "preview"
              ],
              "properties": {
                "sender": {
                  "enum": [
                    "bot",
                    "user"
                  ],
                  "type": "string",
                  "x-zui": {}
                },
                "preview": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false
            },
            "x-zui": {
              "index": 4,
              "title": "Transcript",
              "searchable": true
            },
            "description": "The transcript of the conversation, represented as an array of message items."
          },
          "escalations": {
            "type": "array",
            "items": {
              "type": "string",
              "x-zui": {}
            },
            "x-zui": {
              "index": 5,
              "title": "Escalations",
              "computed": {
                "action": "ai",
                "prompt": "Extract the escalations from the provided transcript. An array representing moments when the conversation was escalated to another team member or department.\nHere's the transcript:\n\n{{transcript}}",
                "dependencies": [
                  "transcript"
                ]
              },
              "searchable": true
            },
            "nullable": true,
            "description": "Optional. An array representing moments when the conversation was escalated to another team member or department."
          },
          "conversationId": {
            "type": "string",
            "x-zui": {
              "index": 6,
              "title": "Conversation ID",
              "searchable": true
            },
            "description": "A unique identifier for this specific chat session."
          }
        },
        "additionalProperties": true
      },
      "parentFolder": "root",
      "selectors": []
    }
  },
  "schemas": [],
  "metadata": {
    "llmModels": {
      "fireworks-ai__accounts/fireworks/models/deepseek-r1-0528": {
        "id": "fireworks-ai__accounts/fireworks/models/deepseek-r1-0528",
        "modelId": "accounts/fireworks/models/deepseek-r1-0528",
        "integrationName": "fireworks-ai",
        "label": "DeepSeek R1 0528",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 160000,
        "outputCostPer1MTokens": 8,
        "outputMaxTokens": 16384,
        "description": "The updated DeepSeek R1 0528 model delivers major improvements in reasoning, inference, and accuracy through enhanced post-training optimization and greater computational resources. It now performs at a level approaching top-tier models like OpenAI o3 and Gemini 2.5 Pro, with notable gains in complex tasks such as math and programming. The update also reduces hallucinations, improves function calling, and enhances the coding experience.",
        "tags": [
          "recommended",
          "reasoning",
          "general-purpose",
          "coding"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/deepseek-v3-0324": {
        "id": "fireworks-ai__accounts/fireworks/models/deepseek-v3-0324",
        "modelId": "accounts/fireworks/models/deepseek-v3-0324",
        "integrationName": "fireworks-ai",
        "label": "DeepSeek V3 0324",
        "inputCostPer1MTokens": 0.9,
        "inputMaxTokens": 160000,
        "outputCostPer1MTokens": 0.9,
        "outputMaxTokens": 16384,
        "description": "DeepSeek V3, a 685B-parameter, mixture-of-experts model, is the latest iteration of the flagship chat model family from the DeepSeek team. It succeeds the DeepSeek V3 model and performs really well on a variety of tasks.",
        "tags": [
          "recommended",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama4-maverick-instruct-basic": {
        "id": "fireworks-ai__accounts/fireworks/models/llama4-maverick-instruct-basic",
        "modelId": "accounts/fireworks/models/llama4-maverick-instruct-basic",
        "integrationName": "fireworks-ai",
        "label": "Llama 4 Maverick Instruct (Basic)",
        "inputCostPer1MTokens": 0.22,
        "inputMaxTokens": 1000000,
        "outputCostPer1MTokens": 0.88,
        "outputMaxTokens": 16384,
        "description": "Llama 4 Maverick 17B Instruct (128E) is a high-capacity multimodal language model from Meta, built on a mixture-of-experts (MoE) architecture with 128 experts and 17 billion active parameters per forward pass (400B total). It supports multilingual text and image input, and produces multilingual text and code output across 12 supported languages. Optimized for vision-language tasks, Maverick is instruction-tuned for assistant-like behavior, image reasoning, and general-purpose multimodal interaction, and suited for research and commercial applications requiring advanced multimodal understanding and high model throughput.",
        "tags": [
          "general-purpose",
          "vision"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama4-scout-instruct-basic": {
        "id": "fireworks-ai__accounts/fireworks/models/llama4-scout-instruct-basic",
        "modelId": "accounts/fireworks/models/llama4-scout-instruct-basic",
        "integrationName": "fireworks-ai",
        "label": "Llama 4 Scout Instruct (Basic)",
        "inputCostPer1MTokens": 0.15,
        "inputMaxTokens": 1048576,
        "outputCostPer1MTokens": 0.6,
        "outputMaxTokens": 16384,
        "description": "Llama 4 Scout 17B Instruct (16E) is a mixture-of-experts (MoE) language model developed by Meta, uses 16 experts per forward pass, activating 17 billion parameters out of a total of 109B. It supports native multimodal input (text and image) and multilingual output (text and code) across 12 supported languages. Designed for assistant-style interaction and visual reasoning, it is instruction-tuned for use in multilingual chat, captioning, and image understanding tasks.",
        "tags": [
          "general-purpose",
          "vision"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama-v3p3-70b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/llama-v3p3-70b-instruct",
        "modelId": "accounts/fireworks/models/llama-v3p3-70b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Llama 3.3 70B Instruct",
        "inputCostPer1MTokens": 0.9,
        "inputMaxTokens": 131072,
        "outputCostPer1MTokens": 0.9,
        "outputMaxTokens": 16384,
        "description": "Llama 3.3 70B Instruct is the December update of Llama 3.1 70B. The model improves upon Llama 3.1 70B (released July 2024) with advances in tool calling, multilingual text support, math and coding. The model achieves industry leading results in reasoning, math and instruction following and provides similar performance as 3.1 405B but with significant speed and cost improvements.",
        "tags": [
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/deepseek-r1": {
        "id": "fireworks-ai__accounts/fireworks/models/deepseek-r1",
        "modelId": "accounts/fireworks/models/deepseek-r1",
        "integrationName": "fireworks-ai",
        "label": "DeepSeek R1 (Fast)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 8,
        "outputMaxTokens": 32768,
        "description": "This version of the R1 model has a perfect balance between speed and cost-efficiency for real-time interactive experiences, with speeds up to 90 tokens per second.\n\nDeepSeek-R1 is a state-of-the-art large language model optimized with reinforcement learning and cold-start data for exceptional reasoning, math, and code performance. **Note**: This model will always use a temperature of 0.6 as recommended by DeepSeek.",
        "tags": [
          "reasoning",
          "general-purpose",
          "coding"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/deepseek-r1-basic": {
        "id": "fireworks-ai__accounts/fireworks/models/deepseek-r1-basic",
        "modelId": "accounts/fireworks/models/deepseek-r1-basic",
        "integrationName": "fireworks-ai",
        "label": "DeepSeek R1 (Basic)",
        "inputCostPer1MTokens": 0.55,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 2.19,
        "outputMaxTokens": 32768,
        "description": "This version of the R1 model is optimized for throughput and cost-effectiveness and has a lower cost but slightly higher latency than the \"Fast\" version of the model.\n\nDeepSeek-R1 is a state-of-the-art large language model optimized with reinforcement learning and cold-start data for exceptional reasoning, math, and code performance. **Note**: This model will always use a temperature of 0.6 as recommended by DeepSeek.",
        "tags": [
          "recommended",
          "reasoning",
          "general-purpose",
          "coding"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/deepseek-v3": {
        "id": "fireworks-ai__accounts/fireworks/models/deepseek-v3",
        "modelId": "accounts/fireworks/models/deepseek-v3",
        "integrationName": "fireworks-ai",
        "label": "DeepSeek V3",
        "inputCostPer1MTokens": 0.9,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.9,
        "outputMaxTokens": 8000,
        "description": "A a strong Mixture-of-Experts (MoE) language model with 671B total parameters with 37B activated for each token from Deepseek.",
        "tags": [
          "deprecated",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama-v3p1-405b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/llama-v3p1-405b-instruct",
        "modelId": "accounts/fireworks/models/llama-v3p1-405b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Llama 3.1 405B Instruct",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 131072,
        "outputCostPer1MTokens": 3,
        "outputMaxTokens": 131072,
        "description": "The Meta Llama 3.1 collection of multilingual large language models (LLMs) is a collection of pretrained and instruction tuned generative models in 8B, 70B and 405B sizes. The Llama 3.1 instruction tuned text only models (8B, 70B, 405B) are optimized for multilingual dialogue use cases and outperform many of the available open source and closed chat models on common industry benchmarks.",
        "tags": [
          "deprecated",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama-v3p1-70b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/llama-v3p1-70b-instruct",
        "modelId": "accounts/fireworks/models/llama-v3p1-70b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Llama 3.1 70B Instruct",
        "inputCostPer1MTokens": 0.9,
        "inputMaxTokens": 131072,
        "outputCostPer1MTokens": 0.9,
        "outputMaxTokens": 131072,
        "description": "The Meta Llama 3.1 collection of multilingual large language models (LLMs) is a collection of pretrained and instruction tuned generative models in 8B, 70B and 405B sizes. The Llama 3.1 instruction tuned text only models (8B, 70B, 405B) are optimized for multilingual dialogue use cases and outperform many of the available open source and closed chat models on common industry benchmarks.",
        "tags": [
          "deprecated",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/llama-v3p1-8b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/llama-v3p1-8b-instruct",
        "modelId": "accounts/fireworks/models/llama-v3p1-8b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Llama 3.1 8B Instruct",
        "inputCostPer1MTokens": 0.2,
        "inputMaxTokens": 131072,
        "outputCostPer1MTokens": 0.2,
        "outputMaxTokens": 131072,
        "description": "The Meta Llama 3.1 collection of multilingual large language models (LLMs) is a collection of pretrained and instruction tuned generative models in 8B, 70B and 405B sizes. The Llama 3.1 instruction tuned text only models (8B, 70B, 405B) are optimized for multilingual dialogue use cases and outperform many of the available open source and closed chat models on common industry benchmarks.",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/mixtral-8x22b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/mixtral-8x22b-instruct",
        "modelId": "accounts/fireworks/models/mixtral-8x22b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Mixtral MoE 8x22B Instruct",
        "inputCostPer1MTokens": 1.2,
        "inputMaxTokens": 65536,
        "outputCostPer1MTokens": 1.2,
        "outputMaxTokens": 65536,
        "description": "Mistral MoE 8x22B Instruct v0.1 model with Sparse Mixture of Experts. Fine tuned for instruction following.",
        "tags": [
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/mixtral-8x7b-instruct": {
        "id": "fireworks-ai__accounts/fireworks/models/mixtral-8x7b-instruct",
        "modelId": "accounts/fireworks/models/mixtral-8x7b-instruct",
        "integrationName": "fireworks-ai",
        "label": "Mixtral MoE 8x7B Instruct",
        "inputCostPer1MTokens": 0.5,
        "inputMaxTokens": 32768,
        "outputCostPer1MTokens": 0.5,
        "outputMaxTokens": 32768,
        "description": "Mistral MoE 8x7B Instruct v0.1 model with Sparse Mixture of Experts. Fine tuned for instruction following",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/mythomax-l2-13b": {
        "id": "fireworks-ai__accounts/fireworks/models/mythomax-l2-13b",
        "modelId": "accounts/fireworks/models/mythomax-l2-13b",
        "integrationName": "fireworks-ai",
        "label": "MythoMax L2 13b",
        "inputCostPer1MTokens": 0.2,
        "inputMaxTokens": 4096,
        "outputCostPer1MTokens": 0.2,
        "outputMaxTokens": 4096,
        "description": "MythoMax L2 is designed to excel at both roleplaying and storytelling, and is an improved variant of the previous MythoMix model, combining the MythoLogic-L2 and Huginn models.",
        "tags": [
          "roleplay",
          "storytelling",
          "low-cost"
        ]
      },
      "fireworks-ai__accounts/fireworks/models/gemma2-9b-it": {
        "id": "fireworks-ai__accounts/fireworks/models/gemma2-9b-it",
        "modelId": "accounts/fireworks/models/gemma2-9b-it",
        "integrationName": "fireworks-ai",
        "label": "Gemma 2 9B Instruct",
        "inputCostPer1MTokens": 0.2,
        "inputMaxTokens": 8192,
        "outputCostPer1MTokens": 0.2,
        "outputMaxTokens": 8192,
        "description": "Redesigned for outsized performance and unmatched efficiency, Gemma 2 optimizes for blazing-fast inference on diverse hardware. Gemma is a family of lightweight, state-of-the-art open models from Google, built from the same research and technology used to create the Gemini models. They are text-to-text, decoder-only large language models, available in English, with open weights, pre-trained variants, and instruction-tuned variants. Gemma models are well-suited for a variety of text generation tasks, including question answering, summarization, and reasoning.",
        "tags": [
          "deprecated",
          "low-cost",
          "general-purpose"
        ]
      },
      "google-ai__models/gemini-2.0-flash": {
        "id": "google-ai__models/gemini-2.0-flash",
        "modelId": "models/gemini-2.0-flash",
        "integrationName": "google-ai",
        "label": "Gemini 2.0 Flash",
        "inputCostPer1MTokens": 0.1,
        "inputMaxTokens": 1048576,
        "outputCostPer1MTokens": 0.4,
        "outputMaxTokens": 8192,
        "description": "Gemini 2.0 Flash delivers next-gen features and improved capabilities, including superior speed, native tool use, multimodal generation, and a 1M token context window.",
        "tags": [
          "recommended",
          "low-cost",
          "general-purpose",
          "vision"
        ]
      },
      "google-ai__models/gemini-1.5-flash-8b-001": {
        "id": "google-ai__models/gemini-1.5-flash-8b-001",
        "modelId": "models/gemini-1.5-flash-8b-001",
        "integrationName": "google-ai",
        "label": "Gemini 1.5 Flash-8B",
        "inputCostPer1MTokens": 0.0375,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.15,
        "outputMaxTokens": 128000,
        "description": "A small model designed for lower intelligence tasks. Google AI's fastest and most cost-efficient model with great performance for high-frequency tasks.",
        "tags": [
          "low-cost",
          "general-purpose",
          "vision"
        ]
      },
      "google-ai__models/gemini-1.5-flash-002": {
        "id": "google-ai__models/gemini-1.5-flash-002",
        "modelId": "models/gemini-1.5-flash-002",
        "integrationName": "google-ai",
        "label": "Gemini 1.5 Flash",
        "inputCostPer1MTokens": 0.075,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.3,
        "outputMaxTokens": 128000,
        "description": "A fast and versatile model for scaling across diverse tasks. Google AI's most balanced multimodal model with great performance for most tasks.",
        "tags": [
          "recommended",
          "general-purpose",
          "vision"
        ]
      },
      "google-ai__models/gemini-1.5-pro-002": {
        "id": "google-ai__models/gemini-1.5-pro-002",
        "modelId": "models/gemini-1.5-pro-002",
        "integrationName": "google-ai",
        "label": "Gemini 1.5 Pro",
        "inputCostPer1MTokens": 1.25,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 5,
        "outputMaxTokens": 128000,
        "description": "A mid-size multimodal model that is optimized for a wide-range of reasoning tasks. Google AI's best-performing model with features for a wide variety of reasoning tasks.",
        "tags": [
          "recommended",
          "general-purpose",
          "vision"
        ]
      },
      "cerebras__qwen-3-32b": {
        "id": "cerebras__qwen-3-32b",
        "modelId": "qwen-3-32b",
        "integrationName": "cerebras",
        "label": "Qwen3 32B",
        "inputCostPer1MTokens": 0.4,
        "inputMaxTokens": 16000,
        "outputCostPer1MTokens": 0.8,
        "outputMaxTokens": 16000,
        "description": "Qwen3-32B is a world-class reasoning model with comparable quality to DeepSeek R1 while outperforming GPT-4.1 and Claude Sonnet 3.7. It excels in code-gen, tool-calling, and advanced reasoning, making it an exceptional model for a wide range of production use cases. NOTE: This model always uses thinking tokens (reasoning) by default, but we have configured it to avoid reasoning (not guaranteed) if the `reasoningEffort` parameter is not set. If the `reasoningEffort` parameter is set, the model will use thinking tokens. The model currently only supports \"high\" reasoning effort so any other value will be ignored.",
        "tags": [
          "general-purpose",
          "reasoning"
        ]
      },
      "cerebras__llama-4-scout-17b-16e-instruct": {
        "id": "cerebras__llama-4-scout-17b-16e-instruct",
        "modelId": "llama-4-scout-17b-16e-instruct",
        "integrationName": "cerebras",
        "label": "Llama 4 Scout 17B",
        "inputCostPer1MTokens": 0.65,
        "inputMaxTokens": 16000,
        "outputCostPer1MTokens": 0.85,
        "outputMaxTokens": 16000,
        "description": "Llama 4 Scout 17B Instruct (16E) is a mixture-of-experts (MoE) language model developed by Meta, uses 16 experts per forward pass, activating 17 billion parameters out of a total of 109B. It supports native multimodal input (text and image) and multilingual output (text and code) across 12 supported languages. Designed for assistant-style interaction and visual reasoning, it is instruction-tuned for use in multilingual chat, captioning, and image understanding tasks.",
        "tags": [
          "general-purpose"
        ]
      },
      "cerebras__llama3.1-8b": {
        "id": "cerebras__llama3.1-8b",
        "modelId": "llama3.1-8b",
        "integrationName": "cerebras",
        "label": "Llama 3.1 8B",
        "inputCostPer1MTokens": 0.1,
        "inputMaxTokens": 16000,
        "outputCostPer1MTokens": 0.1,
        "outputMaxTokens": 16000,
        "description": "Meta developed and released the Meta Llama 3 family of large language models (LLMs), a collection of pretrained and instruction tuned generative text models in 8B and 70B sizes. The Llama 3 instruction tuned models are optimized for dialogue use cases and outperform many of the available open source chat models on common industry benchmarks.",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      },
      "cerebras__llama3.3-70b": {
        "id": "cerebras__llama3.3-70b",
        "modelId": "llama3.3-70b",
        "integrationName": "cerebras",
        "label": "Llama 3.3 70B",
        "inputCostPer1MTokens": 0.85,
        "inputMaxTokens": 16000,
        "outputCostPer1MTokens": 1.2,
        "outputMaxTokens": 16000,
        "description": "Meta developed and released the Meta Llama 3 family of large language models (LLMs), a collection of pretrained and instruction tuned generative text models in 8B and 70B sizes. The Llama 3 instruction tuned models are optimized for dialogue use cases and outperform many of the available open source chat models on common industry benchmarks.",
        "tags": [
          "general-purpose"
        ]
      },
      "openai__o4-mini-2025-04-16": {
        "id": "openai__o4-mini-2025-04-16",
        "modelId": "o4-mini-2025-04-16",
        "integrationName": "openai",
        "label": "GPT o4-mini",
        "inputCostPer1MTokens": 1.1,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 4.4,
        "outputMaxTokens": 100000,
        "description": "o4-mini is OpenAI's latest small o-series model. It's optimized for fast, effective reasoning with exceptionally efficient performance in coding and visual tasks.",
        "tags": [
          "reasoning",
          "vision"
        ]
      },
      "openai__o3-2025-04-16": {
        "id": "openai__o3-2025-04-16",
        "modelId": "o3-2025-04-16",
        "integrationName": "openai",
        "label": "GPT o3",
        "inputCostPer1MTokens": 10,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 40,
        "outputMaxTokens": 100000,
        "description": "o3 is a well-rounded and powerful model across domains. It sets a new standard for math, science, coding, and visual reasoning tasks. It also excels at technical writing and instruction-following. Use it to think through multi-step problems that involve analysis across text, code, and images.",
        "tags": [
          "reasoning",
          "vision"
        ]
      },
      "openai__gpt-4.1-2025-04-14": {
        "id": "openai__gpt-4.1-2025-04-14",
        "modelId": "gpt-4.1-2025-04-14",
        "integrationName": "openai",
        "label": "GPT 4.1",
        "inputCostPer1MTokens": 2,
        "inputMaxTokens": 1047576,
        "outputCostPer1MTokens": 8,
        "outputMaxTokens": 32768,
        "description": "GPT 4.1 is our flagship model for complex tasks. It is well suited for problem solving across domains. The knowledge cutoff is June 2024.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose"
        ]
      },
      "openai__gpt-4.1-mini-2025-04-14": {
        "id": "openai__gpt-4.1-mini-2025-04-14",
        "modelId": "gpt-4.1-mini-2025-04-14",
        "integrationName": "openai",
        "label": "GPT 4.1 Mini",
        "inputCostPer1MTokens": 0.4,
        "inputMaxTokens": 1047576,
        "outputCostPer1MTokens": 1.6,
        "outputMaxTokens": 32768,
        "description": "GPT 4.1 mini provides a balance between intelligence, speed, and cost that makes it an attractive model for many use cases. The knowledge cutoff is June 2024.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose"
        ]
      },
      "openai__gpt-4.1-nano-2025-04-14": {
        "id": "openai__gpt-4.1-nano-2025-04-14",
        "modelId": "gpt-4.1-nano-2025-04-14",
        "integrationName": "openai",
        "label": "GPT 4.1 Nano",
        "inputCostPer1MTokens": 0.1,
        "inputMaxTokens": 1047576,
        "outputCostPer1MTokens": 0.4,
        "outputMaxTokens": 32768,
        "description": "GPT-4.1 nano is the fastest, most cost-effective GPT 4.1 model. The knowledge cutoff is June 2024.",
        "tags": [
          "low-cost",
          "vision",
          "general-purpose"
        ]
      },
      "openai__o3-mini-2025-01-31": {
        "id": "openai__o3-mini-2025-01-31",
        "modelId": "o3-mini-2025-01-31",
        "integrationName": "openai",
        "label": "GPT o3-mini",
        "inputCostPer1MTokens": 1.1,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 4.4,
        "outputMaxTokens": 100000,
        "description": "o3-mini is the most recent small reasoning model from OpenAI, providing high intelligence at the same cost and latency targets of o1-mini. o3-mini also supports key developer features, like Structured Outputs, function calling, Batch API, and more. Like other models in the o-series, it is designed to excel at science, math, and coding tasks. The knowledge cutoff for o3-mini models is October, 2023.",
        "tags": [
          "reasoning",
          "general-purpose"
        ]
      },
      "openai__o1-2024-12-17": {
        "id": "openai__o1-2024-12-17",
        "modelId": "o1-2024-12-17",
        "integrationName": "openai",
        "label": "GPT o1",
        "inputCostPer1MTokens": 15,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 60,
        "outputMaxTokens": 100000,
        "description": "The o1 model is designed to solve hard problems across domains. The o1 series of models are trained with reinforcement learning to perform complex reasoning. o1 models think before they answer, producing a long internal chain of thought before responding to the user.",
        "tags": [
          "reasoning",
          "vision",
          "general-purpose"
        ]
      },
      "openai__o1-mini-2024-09-12": {
        "id": "openai__o1-mini-2024-09-12",
        "modelId": "o1-mini-2024-09-12",
        "integrationName": "openai",
        "label": "GPT o1-mini",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 12,
        "outputMaxTokens": 65536,
        "description": "The o1-mini model is a fast and affordable reasoning model for specialized tasks. The o1 series of models are trained with reinforcement learning to perform complex reasoning. o1 models think before they answer, producing a long internal chain of thought before responding to the user.",
        "tags": [
          "reasoning",
          "vision",
          "general-purpose"
        ]
      },
      "openai__gpt-4o-mini-2024-07-18": {
        "id": "openai__gpt-4o-mini-2024-07-18",
        "modelId": "gpt-4o-mini-2024-07-18",
        "integrationName": "openai",
        "label": "GPT-4o Mini",
        "inputCostPer1MTokens": 0.15,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.6,
        "outputMaxTokens": 16384,
        "description": "GPT-4o mini (‚Äúo‚Äù for ‚Äúomni‚Äù) is OpenAI's most advanced model in the small models category, and their cheapest model yet. It is multimodal (accepting text or image inputs and outputting text), has higher intelligence than gpt-3.5-turbo but is just as fast. It is meant to be used for smaller tasks, including vision tasks. It's recommended to choose gpt-4o-mini where you would have previously used gpt-3.5-turbo as this model is more capable and cheaper.",
        "tags": [
          "recommended",
          "vision",
          "low-cost",
          "general-purpose",
          "function-calling"
        ]
      },
      "openai__gpt-4o-2024-11-20": {
        "id": "openai__gpt-4o-2024-11-20",
        "modelId": "gpt-4o-2024-11-20",
        "integrationName": "openai",
        "label": "GPT-4o (November 2024)",
        "inputCostPer1MTokens": 2.5,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 10,
        "outputMaxTokens": 16384,
        "description": "GPT-4o (‚Äúo‚Äù for ‚Äúomni‚Äù) is OpenAI's most advanced model. It is multimodal (accepting text or image inputs and outputting text), and it has the same high intelligence as GPT-4 Turbo but is cheaper and more efficient.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose",
          "coding",
          "agents",
          "function-calling"
        ]
      },
      "openai__gpt-4o-2024-08-06": {
        "id": "openai__gpt-4o-2024-08-06",
        "modelId": "gpt-4o-2024-08-06",
        "integrationName": "openai",
        "label": "GPT-4o (August 2024)",
        "inputCostPer1MTokens": 2.5,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 10,
        "outputMaxTokens": 16384,
        "description": "GPT-4o (‚Äúo‚Äù for ‚Äúomni‚Äù) is OpenAI's most advanced model. It is multimodal (accepting text or image inputs and outputting text), and it has the same high intelligence as GPT-4 Turbo but is cheaper and more efficient.",
        "tags": [
          "deprecated",
          "vision",
          "general-purpose",
          "coding",
          "agents",
          "function-calling"
        ]
      },
      "openai__gpt-4o-2024-05-13": {
        "id": "openai__gpt-4o-2024-05-13",
        "modelId": "gpt-4o-2024-05-13",
        "integrationName": "openai",
        "label": "GPT-4o (May 2024)",
        "inputCostPer1MTokens": 5,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 4096,
        "description": "GPT-4o (‚Äúo‚Äù for ‚Äúomni‚Äù) is OpenAI's most advanced model. It is multimodal (accepting text or image inputs and outputting text), and it has the same high intelligence as GPT-4 Turbo but is cheaper and more efficient.",
        "tags": [
          "deprecated",
          "vision",
          "general-purpose",
          "coding",
          "agents",
          "function-calling"
        ]
      },
      "openai__gpt-4-turbo-2024-04-09": {
        "id": "openai__gpt-4-turbo-2024-04-09",
        "modelId": "gpt-4-turbo-2024-04-09",
        "integrationName": "openai",
        "label": "GPT-4 Turbo",
        "inputCostPer1MTokens": 10,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 30,
        "outputMaxTokens": 4096,
        "description": "GPT-4 is a large multimodal model (accepting text or image inputs and outputting text) that can solve difficult problems with greater accuracy than any of our previous models, thanks to its broader general knowledge and advanced reasoning capabilities.",
        "tags": [
          "deprecated",
          "general-purpose",
          "coding",
          "agents",
          "function-calling"
        ]
      },
      "openai__gpt-3.5-turbo-0125": {
        "id": "openai__gpt-3.5-turbo-0125",
        "modelId": "gpt-3.5-turbo-0125",
        "integrationName": "openai",
        "label": "GPT-3.5 Turbo",
        "inputCostPer1MTokens": 0.5,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 1.5,
        "outputMaxTokens": 4096,
        "description": "GPT-3.5 Turbo can understand and generate natural language or code and has been optimized for chat but works well for non-chat tasks as well.",
        "tags": [
          "deprecated",
          "general-purpose",
          "low-cost"
        ]
      },
      "anthropic__claude-sonnet-4-20250514": {
        "id": "anthropic__claude-sonnet-4-20250514",
        "modelId": "claude-sonnet-4-20250514",
        "integrationName": "anthropic",
        "label": "Claude Sonnet 4 (Standard Mode)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 64000,
        "description": "Claude Sonnet 4 significantly enhances the capabilities of its predecessor, Sonnet 3.7, excelling in both coding and reasoning tasks with improved precision and controllability. Sonnet 4 balances capability and computational efficiency, making it suitable for a broad range of applications from routine coding tasks to complex software development projects. Key enhancements include improved autonomous codebase navigation, reduced error rates in agent-driven workflows, and increased reliability in following intricate instructions.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-sonnet-4-reasoning-20250514": {
        "id": "anthropic__claude-sonnet-4-reasoning-20250514",
        "modelId": "claude-sonnet-4-reasoning-20250514",
        "integrationName": "anthropic",
        "label": "Claude Sonnet 4 (Reasoning Mode)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 64000,
        "description": "This model uses the \"Extended Thinking\" mode and will use a significantly higher amount of output tokens than the Standard Mode, so this model should only be used for tasks that actually require it.\n\nClaude Sonnet 4 significantly enhances the capabilities of its predecessor, Sonnet 3.7, excelling in both coding and reasoning tasks with improved precision and controllability. Sonnet 4 balances capability and computational efficiency, making it suitable for a broad range of applications from routine coding tasks to complex software development projects. Key enhancements include improved autonomous codebase navigation, reduced error rates in agent-driven workflows, and increased reliability in following intricate instructions.",
        "tags": [
          "recommended",
          "vision",
          "reasoning",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-3-7-sonnet-20250219": {
        "id": "anthropic__claude-3-7-sonnet-20250219",
        "modelId": "claude-3-7-sonnet-20250219",
        "integrationName": "anthropic",
        "label": "Claude 3.7 Sonnet (Standard Mode)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 64000,
        "description": "Claude 3.7 Sonnet is an advanced large language model with improved reasoning, coding, and problem-solving capabilities. The model demonstrates notable improvements in coding, particularly in front-end development and full-stack updates, and excels in agentic workflows, where it can autonomously navigate multi-step processes.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-3-7-sonnet-reasoning-20250219": {
        "id": "anthropic__claude-3-7-sonnet-reasoning-20250219",
        "modelId": "claude-3-7-sonnet-reasoning-20250219",
        "integrationName": "anthropic",
        "label": "Claude 3.7 Sonnet (Reasoning Mode)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 64000,
        "description": "This model uses the \"Extended Thinking\" mode and will use a significantly higher amount of output tokens than the Standard Mode, so this model should only be used for tasks that actually require it.\n\nClaude 3.7 Sonnet is an advanced large language model with improved reasoning, coding, and problem-solving capabilities. The model demonstrates notable improvements in coding, particularly in front-end development and full-stack updates, and excels in agentic workflows, where it can autonomously navigate multi-step processes.",
        "tags": [
          "recommended",
          "vision",
          "reasoning",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-3-5-haiku-20241022": {
        "id": "anthropic__claude-3-5-haiku-20241022",
        "modelId": "claude-3-5-haiku-20241022",
        "integrationName": "anthropic",
        "label": "Claude 3.5 Haiku",
        "inputCostPer1MTokens": 0.8,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 4,
        "outputMaxTokens": 8192,
        "description": "Claude 3.5 Haiku features offers enhanced capabilities in speed, coding accuracy, and tool use. Engineered to excel in real-time applications, it delivers quick response times that are essential for dynamic tasks such as chat interactions and immediate coding suggestions. This makes it highly suitable for environments that demand both speed and precision, such as software development, customer service bots, and data management systems.",
        "tags": [
          "general-purpose"
        ]
      },
      "anthropic__claude-3-5-sonnet-20241022": {
        "id": "anthropic__claude-3-5-sonnet-20241022",
        "modelId": "claude-3-5-sonnet-20241022",
        "integrationName": "anthropic",
        "label": "Claude 3.5 Sonnet (October 2024)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 8192,
        "description": "Claude 3.5 Sonnet delivers better-than-Opus capabilities, faster-than-Sonnet speeds, at the same Sonnet prices. Sonnet is particularly good at coding, data science, visual processing, and agentic tasks.",
        "tags": [
          "vision",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-3-5-sonnet-20240620": {
        "id": "anthropic__claude-3-5-sonnet-20240620",
        "modelId": "claude-3-5-sonnet-20240620",
        "integrationName": "anthropic",
        "label": "Claude 3.5 Sonnet (June 2024)",
        "inputCostPer1MTokens": 3,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 15,
        "outputMaxTokens": 4096,
        "description": "Claude 3.5 Sonnet delivers better-than-Opus capabilities, faster-than-Sonnet speeds, at the same Sonnet prices. Sonnet is particularly good at coding, data science, visual processing, and agentic tasks.",
        "tags": [
          "vision",
          "general-purpose",
          "agents",
          "coding",
          "function-calling",
          "storytelling"
        ]
      },
      "anthropic__claude-3-haiku-20240307": {
        "id": "anthropic__claude-3-haiku-20240307",
        "modelId": "claude-3-haiku-20240307",
        "integrationName": "anthropic",
        "label": "Claude 3 Haiku",
        "inputCostPer1MTokens": 0.25,
        "inputMaxTokens": 200000,
        "outputCostPer1MTokens": 1.25,
        "outputMaxTokens": 4096,
        "description": "Claude 3 Haiku is Anthropic's fastest and most compact model for near-instant responsiveness. Quick and accurate targeted performance.",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      },
      "groq__deepseek-r1-distill-llama-70b": {
        "id": "groq__deepseek-r1-distill-llama-70b",
        "modelId": "deepseek-r1-distill-llama-70b",
        "integrationName": "groq",
        "label": "DeepSeek R1-Distill Llama 3.3 70B (Preview)",
        "inputCostPer1MTokens": 0.75,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.99,
        "outputMaxTokens": 32768,
        "description": "A fine-tuned version of Llama 3.3 70B using samples generated by DeepSeek-R1, making it smarter than the original Llama 70B, particularly for tasks requiring mathematical and factual precision.",
        "tags": [
          "general-purpose",
          "reasoning",
          "preview"
        ]
      },
      "groq__llama-3.3-70b-versatile": {
        "id": "groq__llama-3.3-70b-versatile",
        "modelId": "llama-3.3-70b-versatile",
        "integrationName": "groq",
        "label": "LLaMA 3.3 70B",
        "inputCostPer1MTokens": 0.59,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.79,
        "outputMaxTokens": 32768,
        "description": "The Meta Llama 3.3 multilingual large language model (LLM) is a pretrained and instruction tuned generative model in 70B (text in/text out). The Llama 3.3 instruction tuned text only model is optimized for multilingual dialogue use cases and outperforms many of the available open source and closed chat models on common industry benchmarks.",
        "tags": [
          "recommended",
          "general-purpose",
          "coding"
        ]
      },
      "groq__llama-3.2-1b-preview": {
        "id": "groq__llama-3.2-1b-preview",
        "modelId": "llama-3.2-1b-preview",
        "integrationName": "groq",
        "label": "LLaMA 3.2 1B (Preview)",
        "inputCostPer1MTokens": 0.04,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.04,
        "outputMaxTokens": 8192,
        "description": "The Llama 3.2 instruction-tuned, text-only models are optimized for multilingual dialogue use cases, including agentic retrieval and summarization tasks.",
        "tags": [
          "low-cost",
          "preview"
        ]
      },
      "groq__llama-3.2-3b-preview": {
        "id": "groq__llama-3.2-3b-preview",
        "modelId": "llama-3.2-3b-preview",
        "integrationName": "groq",
        "label": "LLaMA 3.2 3B (Preview)",
        "inputCostPer1MTokens": 0.06,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.06,
        "outputMaxTokens": 8192,
        "description": "The Llama 3.2 instruction-tuned, text-only models are optimized for multilingual dialogue use cases, including agentic retrieval and summarization tasks.",
        "tags": [
          "low-cost",
          "general-purpose",
          "preview"
        ]
      },
      "groq__llama-3.2-11b-vision-preview": {
        "id": "groq__llama-3.2-11b-vision-preview",
        "modelId": "llama-3.2-11b-vision-preview",
        "integrationName": "groq",
        "label": "LLaMA 3.2 11B Vision (Preview)",
        "inputCostPer1MTokens": 0.18,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.18,
        "outputMaxTokens": 8192,
        "description": "The Llama 3.2-Vision instruction-tuned models are optimized for visual recognition, image reasoning, captioning, and answering general questions about an image.",
        "tags": [
          "low-cost",
          "vision",
          "general-purpose",
          "preview"
        ]
      },
      "groq__llama-3.2-90b-vision-preview": {
        "id": "groq__llama-3.2-90b-vision-preview",
        "modelId": "llama-3.2-90b-vision-preview",
        "integrationName": "groq",
        "label": "LLaMA 3.2 90B Vision (Preview)",
        "inputCostPer1MTokens": 0.9,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.9,
        "outputMaxTokens": 8192,
        "description": "The Llama 3.2-Vision instruction-tuned models are optimized for visual recognition, image reasoning, captioning, and answering general questions about an image.",
        "tags": [
          "recommended",
          "vision",
          "general-purpose"
        ]
      },
      "groq__llama-3.1-8b-instant": {
        "id": "groq__llama-3.1-8b-instant",
        "modelId": "llama-3.1-8b-instant",
        "integrationName": "groq",
        "label": "LLaMA 3.1 8B",
        "inputCostPer1MTokens": 0.05,
        "inputMaxTokens": 128000,
        "outputCostPer1MTokens": 0.08,
        "outputMaxTokens": 8192,
        "description": "The Llama 3.1 instruction-tuned, text-only models are optimized for multilingual dialogue use cases.",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      },
      "groq__llama3-8b-8192": {
        "id": "groq__llama3-8b-8192",
        "modelId": "llama3-8b-8192",
        "integrationName": "groq",
        "label": "LLaMA 3 8B",
        "inputCostPer1MTokens": 0.05,
        "inputMaxTokens": 8192,
        "outputCostPer1MTokens": 0.08,
        "outputMaxTokens": 8192,
        "description": "Meta developed and released the Meta Llama 3 family of large language models (LLMs), a collection of pretrained and instruction tuned generative text models in 8 and 70B sizes. The Llama 3 instruction tuned models are optimized for dialogue use cases and outperform many of the available open source chat models on common industry benchmarks.",
        "tags": [
          "low-cost",
          "general-purpose",
          "deprecated"
        ]
      },
      "groq__llama3-70b-8192": {
        "id": "groq__llama3-70b-8192",
        "modelId": "llama3-70b-8192",
        "integrationName": "groq",
        "label": "LLaMA 3 70B",
        "inputCostPer1MTokens": 0.59,
        "inputMaxTokens": 8192,
        "outputCostPer1MTokens": 0.79,
        "outputMaxTokens": 8192,
        "description": "Meta developed and released the Meta Llama 3 family of large language models (LLMs), a collection of pretrained and instruction tuned generative text models in 8 and 70B sizes. The Llama 3 instruction tuned models are optimized for dialogue use cases and outperform many of the available open source chat models on common industry benchmarks.",
        "tags": [
          "general-purpose"
        ]
      },
      "groq__gemma2-9b-it": {
        "id": "groq__gemma2-9b-it",
        "modelId": "gemma2-9b-it",
        "integrationName": "groq",
        "label": "Gemma2 9B",
        "inputCostPer1MTokens": 0.2,
        "inputMaxTokens": 8192,
        "outputCostPer1MTokens": 0.2,
        "outputMaxTokens": 8192,
        "description": "Redesigned for outsized performance and unmatched efficiency, Gemma 2 optimizes for blazing-fast inference on diverse hardware. Gemma is a family of lightweight, state-of-the-art open models from Google, built from the same research and technology used to create the Gemini models. They are text-to-text, decoder-only large language models, available in English, with open weights, pre-trained variants, and instruction-tuned variants. Gemma models are well-suited for a variety of text generation tasks, including question answering, summarization, and reasoning.",
        "tags": [
          "low-cost",
          "general-purpose"
        ]
      }
    }
  },
  "__temporary_integration_schemas": {
    "webchat": {
      "id": "intver_01JBVV0VQW8XN3Z5V9K8DB1M3B",
      "name": "webchat",
      "title": "Webchat",
      "description": "Webchat integration for Botpress",
      "iconUrl": "https://mediafiles.botpress.cloud/2c56f350-6e19-406a-b018-a4781deb5ff3/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JBVV0VQW8XN3Z5V9K8DB1M3B/integration-version/readme.md",
      "createdAt": "2024-11-04T14:59:50.335Z",
      "updatedAt": "2025-06-16T19:21:06.385Z",
      "version": "0.3.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "proactive-user<user>": {
          "id": "ifver_01JTK2KFM4AW2D9JT8M36WBQT6",
          "name": "proactive-user",
          "version": "0.0.3",
          "createdAt": "2025-06-16T19:21:05.995Z",
          "updatedAt": "2025-06-16T19:21:05.995Z",
          "entities": {
            "user": {
              "name": "user"
            }
          },
          "actions": {
            "getOrCreateUser": {
              "name": "getOrCreateUser"
            }
          },
          "events": {},
          "channels": {}
        },
        "typing-indicator": {
          "id": "ifver_01JTK2KGZN3269XH8824JEV7CA",
          "name": "typing-indicator",
          "version": "0.0.3",
          "createdAt": "2025-06-16T19:21:05.978Z",
          "updatedAt": "2025-06-16T19:21:05.978Z",
          "entities": {},
          "actions": {
            "stopTypingIndicator": {
              "name": "stopTypingIndicator"
            },
            "startTypingIndicator": {
              "name": "startTypingIndicator"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "x-zui": {}
            },
            "botDisplayName": {
              "type": "string",
              "x-zui": {}
            },
            "botAvatarUrl": {
              "type": "string",
              "x-zui": {}
            },
            "botDescription": {
              "type": "string",
              "x-zui": {}
            },
            "fabImage": {
              "type": "string",
              "x-zui": {}
            },
            "descriptionPhoneNumber": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "x-zui": {}
                },
                "link": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "descriptionEmailAddress": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "x-zui": {}
                },
                "link": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "descriptionWebsiteUrl": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "x-zui": {}
                },
                "link": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "termsConditionsUrl": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "x-zui": {}
                },
                "link": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "privacyPolicyUrl": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "x-zui": {}
                },
                "link": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {}
            },
            "botComposerPlaceholder": {
              "type": "string",
              "x-zui": {}
            },
            "showPoweredByBotpress": {
              "type": "boolean",
              "x-zui": {}
            },
            "additionalStylesheet": {
              "type": "string",
              "x-zui": {}
            },
            "additionalStylesheetUrl": {
              "type": "string",
              "x-zui": {}
            },
            "allowedOrigins": {
              "type": "array",
              "items": {
                "type": "string",
                "x-zui": {}
              },
              "x-zui": {}
            },
            "primaryColor": {
              "type": "string",
              "x-zui": {}
            },
            "borderRadiusScale": {
              "type": "number",
              "x-zui": {}
            },
            "themeMode": {
              "type": "string",
              "enum": [
                "light",
                "dark"
              ],
              "x-zui": {}
            },
            "variant": {
              "type": "string",
              "enum": [
                "solid",
                "soft"
              ],
              "x-zui": {}
            },
            "headerVariant": {
              "type": "string",
              "enum": [
                "solid",
                "glass"
              ],
              "x-zui": {}
            },
            "fontFamily": {
              "type": "string",
              "x-zui": {}
            },
            "feedbackEnabled": {
              "type": "boolean",
              "x-zui": {}
            },
            "showPoweredBy": {
              "type": "boolean",
              "x-zui": {}
            },
            "footer": {
              "type": "string",
              "x-zui": {}
            },
            "allowFileUpload": {
              "type": "boolean",
              "x-zui": {}
            },
            "storageLocation": {
              "type": "string",
              "enum": [
                "sessionStorage",
                "localStorage"
              ],
              "x-zui": {}
            }
          },
          "additionalProperties": true,
          "x-zui": {},
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      },
      "configurations": {},
      "actions": {
        "configWebchat": {
          "title": "Configure Webchat",
          "description": "Update the webchat configuration during a conversation",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "The conversation id of the webchat instance. Usually {{event.conversationId}}",
                  "x-zui": {},
                  "title": "Conversation ID",
                  "examples": [
                    "{{event.conversationId}}"
                  ]
                },
                "config": {
                  "type": "string",
                  "description": "A JSON string representing the new configuration. You can use {{JSON.stringify(workflow.someVariable)}} to convert an object to JSON",
                  "x-zui": {},
                  "title": "JSON Configuration",
                  "examples": [
                    "{ \"emailAddress\": \"some@mail.com\" }",
                    "{{JSON.stringify(workflow.someVariable)}}"
                  ]
                }
              },
              "required": [
                "conversationId",
                "config"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "customEvent": {
          "title": "Send Custom Event",
          "description": "Initiate this action to dispatch a custom event to the webchat. Please ensure to appropriately handle this event within your webpage's code. Usage: \n\nwindow.botpressWebChat.onEvent(event => {}, ['TRIGGER'])",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "The conversation id of the webchat instance. Usually {{event.conversationId}}",
                  "x-zui": {},
                  "title": "Conversation ID",
                  "examples": [
                    "{{event.conversationId}}"
                  ]
                },
                "event": {
                  "type": "string",
                  "description": "An event as JSON to send to the webchat instance",
                  "x-zui": {},
                  "title": "JSON Payload",
                  "examples": [
                    "{ \"emailAddress\": \"some@mail.com\" }"
                  ]
                }
              },
              "required": [
                "conversationId",
                "event"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "getOrCreateUser": {
          "title": "Get or Create a User",
          "description": "Proactively create a user from a bot",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "x-zui": {}
                },
                "pictureUrl": {
                  "type": "string",
                  "x-zui": {}
                },
                "email": {
                  "type": "string",
                  "x-zui": {}
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Some unique identifier for the user",
                      "x-zui": {}
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "The ID of the conversation in which to add the user",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "id",
                    "conversationId"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "user"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "required": [
                "userId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "getUserData": {
          "title": "Get User Data",
          "description": "Get the user's information that was provided when the webchat is initialized.",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "The ID of the user. Usually you can access it using {{event.userId}}",
                  "x-zui": {},
                  "title": "User ID",
                  "examples": [
                    "{{event.userId}}"
                  ]
                }
              },
              "required": [
                "userId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "userData": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "hideWebchat": {
          "title": "Hide Webchat",
          "description": "Hide the webchat widget",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "The conversation id of the webchat instance. Usually {{event.conversationId}}",
                  "x-zui": {},
                  "title": "Conversation ID",
                  "examples": [
                    "{{event.conversationId}}"
                  ]
                }
              },
              "required": [
                "conversationId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "showWebchat": {
          "title": "Show Webchat",
          "description": "Show the webchat widget",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "The conversation id of the webchat instance. Usually {{event.conversationId}}",
                  "x-zui": {},
                  "title": "Conversation ID",
                  "examples": [
                    "{{event.conversationId}}"
                  ]
                }
              },
              "required": [
                "conversationId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "startTypingIndicator": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "x-zui": {}
                },
                "messageId": {
                  "type": "string",
                  "x-zui": {}
                },
                "timeout": {
                  "type": "number",
                  "x-zui": {}
                }
              },
              "required": [
                "conversationId",
                "messageId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {
            "bpActionHiddenInStudio": "true"
          }
        },
        "stopTypingIndicator": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "x-zui": {}
                },
                "messageId": {
                  "type": "string",
                  "x-zui": {}
                }
              },
              "required": [
                "conversationId",
                "messageId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {
            "bpActionHiddenInStudio": "true"
          }
        },
        "toggleWebchat": {
          "title": "Toggle Webchat",
          "description": "Toggle the visibility of the webchat widget",
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "The conversation id of the webchat instance. Usually {{event.conversationId}}",
                  "x-zui": {},
                  "title": "Conversation ID",
                  "examples": [
                    "{{event.conversationId}}"
                  ]
                }
              },
              "required": [
                "conversationId"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {
        "conversationStarted": {
          "title": "Conversation Started",
          "description": "This event occurs when a user activates the webchat widget, prompting the interface to appear.",
          "schema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "x-zui": {}
              },
              "conversationId": {
                "type": "string",
                "x-zui": {}
              }
            },
            "required": [
              "userId",
              "conversationId"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "attributes": {}
        },
        "trigger": {
          "title": "Custom Trigger (advanced)",
          "description": "This event occurs when a payload is sent from the browser. That payload will be available in {{event.payload}}. Usage: \n\nwindow.botpressWebChat.sendPayload({ type: 'trigger', payload: {} })",
          "schema": {
            "type": "object",
            "properties": {
              "origin": {
                "type": "string",
                "const": "website",
                "description": "The origin of the event trigger",
                "x-zui": {}
              },
              "userId": {
                "type": "string",
                "description": "The webchat userId that triggered the event",
                "x-zui": {}
              },
              "conversationId": {
                "type": "string",
                "description": "The webchat conversationId that triggered the event",
                "x-zui": {}
              },
              "payload": {
                "type": "object",
                "additionalProperties": {
                  "x-zui": {}
                },
                "description": "The payload to send with the event",
                "x-zui": {}
              }
            },
            "required": [
              "origin",
              "userId",
              "conversationId",
              "payload"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          },
          "attributes": {}
        }
      },
      "user": {
        "tags": {
          "id": {}
        },
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {
        "userData": {
          "type": "user",
          "schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "webchatintegration": {
          "type": "integration",
          "schema": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "channels": {
        "channel": {
          "conversation": {
            "tags": {
              "id": {},
              "owner": {}
            },
            "creation": {
              "enabled": false,
              "requiredTags": []
            }
          },
          "messages": {
            "bloc": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "text",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "text": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                },
                                "value": {
                                  "type": "string",
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "text"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "markdown",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "markdown": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "markdown"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "image",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "imageUrl": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "imageUrl"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "audio",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "audioUrl": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "audioUrl"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "video",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "videoUrl": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "videoUrl"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "file",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "fileUrl": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                },
                                "title": {
                                  "type": "string",
                                  "minLength": 1,
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "fileUrl"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "location",
                              "x-zui": {}
                            },
                            "payload": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "x-zui": {},
                                  "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                                },
                                "latitude": {
                                  "type": "number",
                                  "x-zui": {}
                                },
                                "longitude": {
                                  "type": "number",
                                  "x-zui": {}
                                },
                                "address": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "title": {
                                  "type": "string",
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "latitude",
                                "longitude"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "type",
                            "payload"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        }
                      ],
                      "x-zui": {}
                    },
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "items"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "video": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "videoUrl": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "videoUrl"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "text": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "text": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "value": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "text"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "markdown": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "markdown": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "markdown"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "location": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "latitude": {
                    "type": "number",
                    "x-zui": {}
                  },
                  "longitude": {
                    "type": "number",
                    "x-zui": {}
                  },
                  "address": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "title": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "image": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "imageUrl": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "imageUrl"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "file": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "fileUrl": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "title": {
                    "x-zui": {},
                    "type": "string",
                    "minLength": 1
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "fileUrl"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "dropdown": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "text": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        },
                        "value": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "label",
                        "value"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "x-zui": {}
                  },
                  "disableFreeText": {
                    "type": "boolean",
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "text",
                  "options"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "choice": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "text": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        },
                        "value": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "label",
                        "value"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "x-zui": {}
                  },
                  "disableFreeText": {
                    "type": "boolean",
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "text",
                  "options"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "carousel": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "x-zui": {},
                          "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                        },
                        "title": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        },
                        "subtitle": {
                          "x-zui": {},
                          "type": "string",
                          "minLength": 1
                        },
                        "imageUrl": {
                          "x-zui": {},
                          "type": "string",
                          "minLength": 1
                        },
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "enum": [
                                  "postback",
                                  "url",
                                  "say"
                                ],
                                "x-zui": {}
                              },
                              "label": {
                                "type": "string",
                                "minLength": 1,
                                "x-zui": {}
                              },
                              "value": {
                                "type": "string",
                                "minLength": 1,
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "action",
                              "label",
                              "value"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "title",
                        "actions"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "items"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "card": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "title": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "subtitle": {
                    "x-zui": {},
                    "type": "string",
                    "minLength": 1
                  },
                  "imageUrl": {
                    "x-zui": {},
                    "type": "string",
                    "minLength": 1
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "enum": [
                            "postback",
                            "url",
                            "say"
                          ],
                          "x-zui": {}
                        },
                        "label": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        },
                        "value": {
                          "type": "string",
                          "minLength": 1,
                          "x-zui": {}
                        }
                      },
                      "required": [
                        "action",
                        "label",
                        "value"
                      ],
                      "additionalProperties": false,
                      "x-zui": {}
                    },
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "title",
                  "actions"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "audio": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "audioUrl": {
                    "type": "string",
                    "minLength": 1,
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "audioUrl"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            },
            "custom": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "x-zui": {},
                    "description": "Fake User ID; allows the bot to pretend sending the message as someone else."
                  },
                  "url": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "name": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "data": {
                    "x-zui": {}
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "x-zui": {}
                    },
                    "x-zui": {}
                  }
                },
                "required": [
                  "url",
                  "name"
                ],
                "additionalProperties": false,
                "x-zui": {},
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            }
          },
          "message": {
            "tags": {
              "feedbackComment": {},
              "feedbackValue": {},
              "id": {},
              "replyTo": {},
              "selectedBy": {}
            }
          }
        }
      },
      "entities": {
        "user": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Some unique identifier for the user",
                "x-zui": {}
              },
              "conversationId": {
                "type": "string",
                "description": "The ID of the conversation in which to add the user",
                "x-zui": {}
              }
            },
            "required": [
              "id",
              "conversationId"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "SIGNAL_SECRET",
        "SIGNAL_URL",
        "AUTH_ENCRYPTION_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 0,
        "installs": 0
      }
    },
    "google-ai": {
      "id": "intver_01JKXVH2BD8PQ1DTXZP0CR7D4Q",
      "name": "google-ai",
      "title": "Google AI",
      "description": "Gain access to Gemini models for content generation, chat responses, and advanced language tasks.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01JC1R2AEBVW4QT77JHS9QKCRD/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JKXVH2BD8PQ1DTXZP0CR7D4Q/integration-version/readme.md",
      "createdAt": "2025-02-12T19:52:44.700Z",
      "updatedAt": "2025-05-06T15:18:56.521Z",
      "version": "4.0.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-05-06T15:18:56.196Z",
          "updatedAt": "2025-05-06T15:18:56.196Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "models/gemini-2.0-flash",
                        "models/gemini-1.5-flash-8b-001",
                        "models/gemini-1.5-flash-002",
                        "models/gemini-1.5-pro-002"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "models/gemini-1.5-flash-002"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "models/gemini-2.0-flash",
                              "models/gemini-1.5-flash-8b-001",
                              "models/gemini-1.5-flash-002",
                              "models/gemini-1.5-pro-002"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "models/gemini-1.5-flash-002"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "models/gemini-2.0-flash",
                  "models/gemini-1.5-flash-8b-001",
                  "models/gemini-1.5-flash-002",
                  "models/gemini-1.5-pro-002"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "models/gemini-1.5-flash-002"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "GOOGLE_AI_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 0,
        "installs": 0
      }
    },
    "groq": {
      "id": "intver_01JPWXM2D6CPQ9CNS9WEXMA6WD",
      "name": "groq",
      "title": "Groq",
      "description": "Gain access to Groq models for content generation, chat responses, and audio transcription.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01J0XY2GADMAZA0SYSBYDD0VQ7/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JPWXM2D6CPQ9CNS9WEXMA6WD/integration-version/readme.md",
      "createdAt": "2025-03-21T17:57:11.266Z",
      "updatedAt": "2025-05-06T15:19:18.568Z",
      "version": "13.0.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-05-06T15:19:18.272Z",
          "updatedAt": "2025-05-06T15:19:18.272Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        },
        "speech-to-text<speechToTextModelRef>": {
          "id": "ifver_01JTK2KGWZCWARJBCRFC8CC2D3",
          "name": "speech-to-text",
          "version": "2.0.1",
          "createdAt": "2025-05-06T15:19:18.285Z",
          "updatedAt": "2025-05-06T15:19:18.285Z",
          "entities": {
            "speechToTextModelRef": {
              "name": "speechToTextModelRef"
            }
          },
          "actions": {
            "transcribeAudio": {
              "name": "transcribeAudio"
            },
            "listSpeechToTextModels": {
              "name": "listSpeechToTextModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "deepseek-r1-distill-llama-70b",
                        "llama-3.3-70b-versatile",
                        "llama-3.2-1b-preview",
                        "llama-3.2-3b-preview",
                        "llama-3.2-11b-vision-preview",
                        "llama-3.2-90b-vision-preview",
                        "llama-3.1-8b-instant",
                        "llama3-8b-8192",
                        "llama3-70b-8192",
                        "gemma2-9b-it"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "mixtral-8x7b-32768"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "deepseek-r1-distill-llama-70b",
                              "llama-3.3-70b-versatile",
                              "llama-3.2-1b-preview",
                              "llama-3.2-3b-preview",
                              "llama-3.2-11b-vision-preview",
                              "llama-3.2-90b-vision-preview",
                              "llama-3.1-8b-instant",
                              "llama3-8b-8192",
                              "llama3-70b-8192",
                              "gemma2-9b-it"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "mixtral-8x7b-32768"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listSpeechToTextModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "costPerMinute": {
                            "type": "number",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "costPerMinute"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "transcribeAudio": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "fileUrl": {
                  "type": "string",
                  "x-zui": {}
                },
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "prompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 0
                }
              },
              "required": [
                "fileUrl"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "duration": {
                  "type": "number",
                  "x-zui": {}
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "id": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "seek": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "start": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "end": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "temperature": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "avg_logprob": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "compression_ratio": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "no_speech_prob": {
                        "type": "number",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "text",
                      "id",
                      "seek",
                      "start",
                      "end",
                      "tokens",
                      "temperature",
                      "avg_logprob",
                      "compression_ratio",
                      "no_speech_prob"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "cost": {
                  "type": "number",
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "language",
                "duration",
                "segments",
                "model",
                "cost",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "deepseek-r1-distill-llama-70b",
                  "llama-3.3-70b-versatile",
                  "llama-3.2-1b-preview",
                  "llama-3.2-3b-preview",
                  "llama-3.2-11b-vision-preview",
                  "llama-3.2-90b-vision-preview",
                  "llama-3.1-8b-instant",
                  "llama3-8b-8192",
                  "llama3-70b-8192",
                  "gemma2-9b-it"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "mixtral-8x7b-32768"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "speechToTextModelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-zui": {}
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "GROQ_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 1190,
        "installs": 38760
      }
    },
    "openai": {
      "id": "intver_01JTK0RQA37W4K9KZEF2T3WNSF",
      "name": "openai",
      "title": "OpenAI",
      "description": "Gain access to OpenAI models for text generation, speech synthesis, audio transcription, and image generation.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01J0XY3C3VT7PC835HRGCKRBFA/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JTK0RQA37W4K9KZEF2T3WNSF/integration-version/readme.md",
      "createdAt": "2025-05-06T14:42:32.607Z",
      "updatedAt": "2025-05-06T15:20:18.912Z",
      "version": "15.0.1",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-05-06T15:20:18.411Z",
          "updatedAt": "2025-05-06T15:20:18.411Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        },
        "speech-to-text<speechToTextModelRef>": {
          "id": "ifver_01JTK2KGWZCWARJBCRFC8CC2D3",
          "name": "speech-to-text",
          "version": "2.0.1",
          "createdAt": "2025-05-06T15:20:18.463Z",
          "updatedAt": "2025-05-06T15:20:18.463Z",
          "entities": {
            "speechToTextModelRef": {
              "name": "speechToTextModelRef"
            }
          },
          "actions": {
            "transcribeAudio": {
              "name": "transcribeAudio"
            },
            "listSpeechToTextModels": {
              "name": "listSpeechToTextModels"
            }
          },
          "events": {},
          "channels": {}
        },
        "text-to-image<imageModelRef,imageGenerationParams>": {
          "id": "ifver_01JTK2KGWFWAH22Y3EXYERBNRJ",
          "name": "text-to-image",
          "version": "2.1.1",
          "createdAt": "2025-05-06T15:20:18.437Z",
          "updatedAt": "2025-05-06T15:20:18.437Z",
          "entities": {
            "imageModelRef": {
              "name": "imageModelRef"
            },
            "imageGenerationParams": {
              "name": "imageGenerationParams"
            }
          },
          "actions": {
            "generateImage": {
              "name": "generateImage"
            },
            "listImageModels": {
              "name": "listImageModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "o4-mini-2025-04-16",
                        "o3-2025-04-16",
                        "gpt-4.1-2025-04-14",
                        "gpt-4.1-mini-2025-04-14",
                        "gpt-4.1-nano-2025-04-14",
                        "o3-mini-2025-01-31",
                        "o1-2024-12-17",
                        "o1-mini-2024-09-12",
                        "gpt-4o-mini-2024-07-18",
                        "gpt-4o-2024-11-20",
                        "gpt-4o-2024-08-06",
                        "gpt-4o-2024-05-13",
                        "gpt-4-turbo-2024-04-09",
                        "gpt-3.5-turbo-0125"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "gpt-4o-mini-2024-07-18"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "generateImage": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "prompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "size": {
                  "type": "string",
                  "x-zui": {}
                },
                "expiration": {
                  "type": "number",
                  "x-zui": {}
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "style": {
                      "type": "string",
                      "enum": [
                        "natural",
                        "vivid"
                      ],
                      "x-zui": {},
                      "default": "vivid",
                      "description": "Image style - Only supported by DALL-E 3 models"
                    },
                    "user": {
                      "type": "string",
                      "x-zui": {},
                      "description": "User ID to associate with the image, for abuse detection purposes"
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "prompt"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "imageUrl": {
                  "type": "string",
                  "x-zui": {}
                },
                "cost": {
                  "type": "number",
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "model",
                "imageUrl",
                "cost",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "generateSpeech": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "enum": [
                    "tts-1",
                    "tts-1-hd"
                  ],
                  "x-zui": {
                    "placeholder": "tts-1"
                  }
                },
                "input": {
                  "type": "string",
                  "x-zui": {}
                },
                "voice": {
                  "type": "string",
                  "enum": [
                    "alloy",
                    "echo",
                    "fable",
                    "onyx",
                    "nova",
                    "shimmer"
                  ],
                  "x-zui": {
                    "placeholder": "alloy"
                  }
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "mp3",
                    "opus",
                    "aac",
                    "flac",
                    "wav",
                    "pcm"
                  ],
                  "x-zui": {
                    "placeholder": "mp3"
                  }
                },
                "speed": {
                  "type": "number",
                  "minimum": 0.25,
                  "maximum": 4,
                  "x-zui": {
                    "placeholder": "1"
                  }
                },
                "expiration": {
                  "type": "integer",
                  "minimum": 30,
                  "maximum": 90,
                  "x-zui": {},
                  "description": "Expiration of the generated audio file in days, after which the file will be automatically deleted to free up storage space in your account. The default is to keep the file indefinitely (no expiration). The minimum is 30 days and the maximum is 90 days."
                }
              },
              "required": [
                "input"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "audioUrl": {
                  "type": "string",
                  "description": "URL to the audio file with the generated speech",
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "description": "Cost of the speech generation, in U.S. dollars",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "audioUrl",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listImageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "costPerImage": {
                            "type": "number",
                            "x-zui": {}
                          },
                          "sizes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "defaultSize": {
                            "type": "string",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "costPerImage",
                          "sizes",
                          "defaultSize"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "o4-mini-2025-04-16",
                              "o3-2025-04-16",
                              "gpt-4.1-2025-04-14",
                              "gpt-4.1-mini-2025-04-14",
                              "gpt-4.1-nano-2025-04-14",
                              "o3-mini-2025-01-31",
                              "o1-2024-12-17",
                              "o1-mini-2024-09-12",
                              "gpt-4o-mini-2024-07-18",
                              "gpt-4o-2024-11-20",
                              "gpt-4o-2024-08-06",
                              "gpt-4o-2024-05-13",
                              "gpt-4-turbo-2024-04-09",
                              "gpt-3.5-turbo-0125"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "gpt-4o-mini-2024-07-18"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listSpeechToTextModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "costPerMinute": {
                            "type": "number",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "costPerMinute"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "transcribeAudio": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "fileUrl": {
                  "type": "string",
                  "x-zui": {}
                },
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "prompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 0
                }
              },
              "required": [
                "fileUrl"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "duration": {
                  "type": "number",
                  "x-zui": {}
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "id": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "seek": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "start": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "end": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "temperature": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "avg_logprob": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "compression_ratio": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "no_speech_prob": {
                        "type": "number",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "text",
                      "id",
                      "seek",
                      "start",
                      "end",
                      "tokens",
                      "temperature",
                      "avg_logprob",
                      "compression_ratio",
                      "no_speech_prob"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "cost": {
                  "type": "number",
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "language",
                "duration",
                "segments",
                "model",
                "cost",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "o4-mini-2025-04-16",
                  "o3-2025-04-16",
                  "gpt-4.1-2025-04-14",
                  "gpt-4.1-mini-2025-04-14",
                  "gpt-4.1-nano-2025-04-14",
                  "o3-mini-2025-01-31",
                  "o1-2024-12-17",
                  "o1-mini-2024-09-12",
                  "gpt-4o-mini-2024-07-18",
                  "gpt-4o-2024-11-20",
                  "gpt-4o-2024-08-06",
                  "gpt-4o-2024-05-13",
                  "gpt-4-turbo-2024-04-09",
                  "gpt-3.5-turbo-0125"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "gpt-4o-mini-2024-07-18"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "imageModelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-zui": {}
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "speechToTextModelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-zui": {}
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "imageGenerationParams": {
          "schema": {
            "type": "object",
            "properties": {
              "style": {
                "type": "string",
                "enum": [
                  "natural",
                  "vivid"
                ],
                "x-zui": {},
                "default": "vivid",
                "description": "Image style - Only supported by DALL-E 3 models"
              },
              "user": {
                "type": "string",
                "x-zui": {},
                "description": "User ID to associate with the image, for abuse detection purposes"
              }
            },
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "OPENAI_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 3485,
        "installs": 58267
      }
    },
    "anthropic": {
      "id": "intver_01JWS59JM0ARD3GB4NVZ7YA0CX",
      "name": "anthropic",
      "title": "Anthropic",
      "description": "Access a curated list of Claude models to set as your chosen LLM.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01J29XBDF9D3TT7VWHYBB39G8W/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JWS59JM0ARD3GB4NVZ7YA0CX/integration-version/readme.md",
      "createdAt": "2025-06-02T20:28:29.371Z",
      "updatedAt": "2025-06-02T20:28:29.371Z",
      "version": "9.0.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-06-02T20:28:29.320Z",
          "updatedAt": "2025-06-02T20:28:29.320Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "claude-sonnet-4-20250514",
                        "claude-sonnet-4-reasoning-20250514",
                        "claude-3-7-sonnet-20250219",
                        "claude-3-7-sonnet-reasoning-20250219",
                        "claude-3-5-haiku-20241022",
                        "claude-3-5-sonnet-20241022",
                        "claude-3-5-sonnet-20240620",
                        "claude-3-haiku-20240307"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "claude-sonnet-4-20250514"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "claude-sonnet-4-20250514",
                              "claude-sonnet-4-reasoning-20250514",
                              "claude-3-7-sonnet-20250219",
                              "claude-3-7-sonnet-reasoning-20250219",
                              "claude-3-5-haiku-20241022",
                              "claude-3-5-sonnet-20241022",
                              "claude-3-5-sonnet-20240620",
                              "claude-3-haiku-20240307"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "claude-sonnet-4-20250514"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "claude-sonnet-4-20250514",
                  "claude-sonnet-4-reasoning-20250514",
                  "claude-3-7-sonnet-20250219",
                  "claude-3-7-sonnet-reasoning-20250219",
                  "claude-3-5-haiku-20241022",
                  "claude-3-5-sonnet-20241022",
                  "claude-3-5-sonnet-20240620",
                  "claude-3-haiku-20240307"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "claude-sonnet-4-20250514"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "ANTHROPIC_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 1167,
        "installs": 35510
      }
    },
    "fireworks-ai": {
      "id": "intver_01JX35R5W1VP5B42SJ9GGP6010",
      "name": "fireworks-ai",
      "title": "Fireworks AI",
      "description": "Choose from curated Fireworks AI models for content generation, chat completions, and audio transcription.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01J4MJQRH68JMDX6GRX9EYK3X9/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JX35R5W1VP5B42SJ9GGP6010/integration-version/readme.md",
      "createdAt": "2025-06-06T17:48:52.362Z",
      "updatedAt": "2025-06-06T17:48:52.362Z",
      "version": "8.0.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-06-06T17:48:52.227Z",
          "updatedAt": "2025-06-06T17:48:52.227Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        },
        "speech-to-text<speechToTextModelRef>": {
          "id": "ifver_01JTK2KGWZCWARJBCRFC8CC2D3",
          "name": "speech-to-text",
          "version": "2.0.1",
          "createdAt": "2025-06-06T17:48:52.227Z",
          "updatedAt": "2025-06-06T17:48:52.227Z",
          "entities": {
            "speechToTextModelRef": {
              "name": "speechToTextModelRef"
            }
          },
          "actions": {
            "transcribeAudio": {
              "name": "transcribeAudio"
            },
            "listSpeechToTextModels": {
              "name": "listSpeechToTextModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "accounts/fireworks/models/deepseek-r1-0528",
                        "accounts/fireworks/models/deepseek-v3-0324",
                        "accounts/fireworks/models/llama4-maverick-instruct-basic",
                        "accounts/fireworks/models/llama4-scout-instruct-basic",
                        "accounts/fireworks/models/llama-v3p3-70b-instruct",
                        "accounts/fireworks/models/deepseek-r1",
                        "accounts/fireworks/models/deepseek-r1-basic",
                        "accounts/fireworks/models/deepseek-v3",
                        "accounts/fireworks/models/llama-v3p1-405b-instruct",
                        "accounts/fireworks/models/llama-v3p1-70b-instruct",
                        "accounts/fireworks/models/llama-v3p1-8b-instruct",
                        "accounts/fireworks/models/mixtral-8x22b-instruct",
                        "accounts/fireworks/models/mixtral-8x7b-instruct",
                        "accounts/fireworks/models/mythomax-l2-13b",
                        "accounts/fireworks/models/gemma2-9b-it"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "accounts/fireworks/models/llama-v3p1-70b-instruct"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "accounts/fireworks/models/deepseek-r1-0528",
                              "accounts/fireworks/models/deepseek-v3-0324",
                              "accounts/fireworks/models/llama4-maverick-instruct-basic",
                              "accounts/fireworks/models/llama4-scout-instruct-basic",
                              "accounts/fireworks/models/llama-v3p3-70b-instruct",
                              "accounts/fireworks/models/deepseek-r1",
                              "accounts/fireworks/models/deepseek-r1-basic",
                              "accounts/fireworks/models/deepseek-v3",
                              "accounts/fireworks/models/llama-v3p1-405b-instruct",
                              "accounts/fireworks/models/llama-v3p1-70b-instruct",
                              "accounts/fireworks/models/llama-v3p1-8b-instruct",
                              "accounts/fireworks/models/mixtral-8x22b-instruct",
                              "accounts/fireworks/models/mixtral-8x7b-instruct",
                              "accounts/fireworks/models/mythomax-l2-13b",
                              "accounts/fireworks/models/gemma2-9b-it"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "accounts/fireworks/models/llama-v3p1-70b-instruct"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listSpeechToTextModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "costPerMinute": {
                            "type": "number",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "costPerMinute"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "transcribeAudio": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "fileUrl": {
                  "type": "string",
                  "x-zui": {}
                },
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "prompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 0
                }
              },
              "required": [
                "fileUrl"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string",
                  "x-zui": {}
                },
                "duration": {
                  "type": "number",
                  "x-zui": {}
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "id": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "seek": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "start": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "end": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "number",
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "temperature": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "avg_logprob": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "compression_ratio": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "no_speech_prob": {
                        "type": "number",
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "text",
                      "id",
                      "seek",
                      "start",
                      "end",
                      "tokens",
                      "temperature",
                      "avg_logprob",
                      "compression_ratio",
                      "no_speech_prob"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "cost": {
                  "type": "number",
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "language",
                "duration",
                "segments",
                "model",
                "cost",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "accounts/fireworks/models/deepseek-r1-0528",
                  "accounts/fireworks/models/deepseek-v3-0324",
                  "accounts/fireworks/models/llama4-maverick-instruct-basic",
                  "accounts/fireworks/models/llama4-scout-instruct-basic",
                  "accounts/fireworks/models/llama-v3p3-70b-instruct",
                  "accounts/fireworks/models/deepseek-r1",
                  "accounts/fireworks/models/deepseek-r1-basic",
                  "accounts/fireworks/models/deepseek-v3",
                  "accounts/fireworks/models/llama-v3p1-405b-instruct",
                  "accounts/fireworks/models/llama-v3p1-70b-instruct",
                  "accounts/fireworks/models/llama-v3p1-8b-instruct",
                  "accounts/fireworks/models/mixtral-8x22b-instruct",
                  "accounts/fireworks/models/mixtral-8x7b-instruct",
                  "accounts/fireworks/models/mythomax-l2-13b",
                  "accounts/fireworks/models/gemma2-9b-it"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "accounts/fireworks/models/llama-v3p1-70b-instruct"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        },
        "speechToTextModelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-zui": {}
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "FIREWORKS_AI_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 28,
        "installs": 12
      }
    },
    "cerebras": {
      "id": "intver_01JXBAAP4X17B1YKYFGPVTH0SS",
      "name": "cerebras",
      "title": "Cerebras",
      "description": "Get access to a curated list of Cerebras models for content generation and chat completions within your bot.",
      "iconUrl": "https://mediafiles.botpress.cloud/int_01J7C7K08J94KBY5B9G3YTQ1SF/integration/icon.svg",
      "readmeUrl": "https://mediafiles.botpress.cloud/intver_01JXBAAP4X17B1YKYFGPVTH0SS/integration-version/readme.md",
      "createdAt": "2025-06-09T21:42:48.540Z",
      "updatedAt": "2025-06-11T20:38:00.892Z",
      "version": "7.0.0",
      "public": true,
      "url": "",
      "verificationStatus": "unapproved",
      "interfaces": {
        "llm<modelRef>": {
          "id": "ifver_01JTK2KFNP1FSTY16Z73ZSJH58",
          "name": "llm",
          "version": "8.0.1",
          "createdAt": "2025-06-11T20:38:00.584Z",
          "updatedAt": "2025-06-11T20:38:00.584Z",
          "entities": {
            "modelRef": {
              "name": "modelRef"
            }
          },
          "actions": {
            "generateContent": {
              "name": "generateContent"
            },
            "listLanguageModels": {
              "name": "listLanguageModels"
            }
          },
          "events": {},
          "channels": {}
        }
      },
      "configuration": {
        "identifier": {
          "required": false
        },
        "schema": {
          "type": "object"
        }
      },
      "configurations": {},
      "actions": {
        "generateContent": {
          "billable": true,
          "cacheable": true,
          "input": {
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "llama3.1-8b",
                        "llama3.3-70b",
                        "llama-4-scout-17b-16e-instruct",
                        "qwen-3-32b"
                      ],
                      "description": "Model to use for content generation",
                      "x-zui": {
                        "placeholder": "llama3.1-8b"
                      }
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "reasoningEffort": {
                  "type": "string",
                  "enum": [
                    "low",
                    "medium",
                    "high"
                  ],
                  "x-zui": {}
                },
                "systemPrompt": {
                  "type": "string",
                  "x-zui": {}
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "enum": [
                          "user",
                          "assistant"
                        ],
                        "x-zui": {}
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "responseFormat": {
                  "type": "string",
                  "enum": [
                    "text",
                    "json_object"
                  ],
                  "x-zui": {}
                },
                "maxTokens": {
                  "type": "number",
                  "x-zui": {}
                },
                "temperature": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "topP": {
                  "type": "number",
                  "x-zui": {},
                  "default": 1
                },
                "stopSequences": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "function",
                        "x-zui": {}
                      },
                      "function": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "argumentsSchema": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false,
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "type",
                      "function"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "toolChoice": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "auto",
                        "specific",
                        "any",
                        "none",
                        ""
                      ],
                      "x-zui": {}
                    },
                    "functionName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "userId": {
                  "type": "string",
                  "x-zui": {}
                },
                "debug": {
                  "type": "boolean",
                  "x-zui": {}
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "promptSource": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "promptCategory": {
                      "type": "string",
                      "x-zui": {}
                    },
                    "integrationName": {
                      "type": "string",
                      "x-zui": {}
                    }
                  },
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "messages"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-zui": {}
                },
                "provider": {
                  "type": "string",
                  "x-zui": {}
                },
                "model": {
                  "type": "string",
                  "x-zui": {}
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "tool_calls",
                          "tool_result",
                          "multipart"
                        ],
                        "x-zui": {},
                        "default": "text"
                      },
                      "toolCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "x-zui": {}
                            },
                            "type": {
                              "type": "string",
                              "const": "function",
                              "x-zui": {}
                            },
                            "function": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "x-zui": {}
                                },
                                "arguments": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "x-zui": {}
                                      },
                                      "x-zui": {}
                                    },
                                    {
                                      "type": "null",
                                      "x-zui": {}
                                    }
                                  ],
                                  "x-zui": {}
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "additionalProperties": false,
                              "x-zui": {}
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "additionalProperties": false,
                          "x-zui": {}
                        },
                        "x-zui": {}
                      },
                      "toolResultCallId": {
                        "type": "string",
                        "x-zui": {}
                      },
                      "content": {
                        "anyOf": [
                          {
                            "anyOf": [
                              {
                                "type": "string",
                                "x-zui": {}
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "image"
                                      ],
                                      "x-zui": {}
                                    },
                                    "mimeType": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "text": {
                                      "type": "string",
                                      "x-zui": {}
                                    },
                                    "url": {
                                      "type": "string",
                                      "x-zui": {}
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "additionalProperties": false,
                                  "x-zui": {}
                                },
                                "x-zui": {}
                              }
                            ],
                            "x-zui": {}
                          },
                          {
                            "type": "null",
                            "x-zui": {}
                          }
                        ],
                        "x-zui": {}
                      },
                      "role": {
                        "type": "string",
                        "const": "assistant",
                        "x-zui": {}
                      },
                      "index": {
                        "type": "number",
                        "x-zui": {}
                      },
                      "stopReason": {
                        "type": "string",
                        "enum": [
                          "stop",
                          "max_tokens",
                          "tool_calls",
                          "content_filter",
                          "other"
                        ],
                        "x-zui": {}
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "index",
                      "stopReason"
                    ],
                    "additionalProperties": false,
                    "x-zui": {}
                  },
                  "x-zui": {}
                },
                "usage": {
                  "type": "object",
                  "properties": {
                    "inputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "inputCost": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputTokens": {
                      "type": "number",
                      "x-zui": {}
                    },
                    "outputCost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "inputTokens",
                    "inputCost",
                    "outputTokens",
                    "outputCost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                },
                "botpress": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number",
                      "x-zui": {}
                    }
                  },
                  "required": [
                    "cost"
                  ],
                  "additionalProperties": false,
                  "x-zui": {}
                }
              },
              "required": [
                "id",
                "provider",
                "model",
                "choices",
                "usage",
                "botpress"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        },
        "listLanguageModels": {
          "billable": false,
          "cacheable": false,
          "input": {
            "schema": {
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "output": {
            "schema": {
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "name": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "description": {
                            "type": "string",
                            "x-zui": {}
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "recommended",
                                "deprecated",
                                "general-purpose",
                                "low-cost",
                                "vision",
                                "coding",
                                "agents",
                                "function-calling",
                                "roleplay",
                                "storytelling",
                                "reasoning",
                                "preview"
                              ],
                              "x-zui": {}
                            },
                            "x-zui": {}
                          },
                          "input": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          },
                          "output": {
                            "type": "object",
                            "properties": {
                              "maxTokens": {
                                "type": "number",
                                "x-zui": {}
                              },
                              "costPer1MTokens": {
                                "type": "number",
                                "x-zui": {}
                              }
                            },
                            "required": [
                              "maxTokens",
                              "costPer1MTokens"
                            ],
                            "additionalProperties": false,
                            "x-zui": {}
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "description",
                          "tags",
                          "input",
                          "output"
                        ],
                        "x-zui": {}
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "enum": [
                              "llama3.1-8b",
                              "llama3.3-70b",
                              "llama-4-scout-17b-16e-instruct",
                              "qwen-3-32b"
                            ],
                            "description": "Model to use for content generation",
                            "x-zui": {
                              "placeholder": "llama3.1-8b"
                            }
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "x-zui": {}
                      }
                    ],
                    "x-zui": {}
                  },
                  "x-zui": {}
                }
              },
              "required": [
                "models"
              ],
              "additionalProperties": false,
              "x-zui": {},
              "$schema": "http://json-schema.org/draft-07/schema#"
            }
          },
          "attributes": {}
        }
      },
      "events": {},
      "user": {
        "tags": {},
        "creation": {
          "enabled": false,
          "requiredTags": []
        }
      },
      "identifier": {},
      "states": {},
      "channels": {},
      "entities": {
        "modelRef": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "enum": [
                  "llama3.1-8b",
                  "llama3.3-70b",
                  "llama-4-scout-17b-16e-instruct",
                  "qwen-3-32b"
                ],
                "description": "Model to use for content generation",
                "x-zui": {
                  "placeholder": "llama3.1-8b"
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false,
            "x-zui": {},
            "$schema": "http://json-schema.org/draft-07/schema#"
          }
        }
      },
      "dev": false,
      "secrets": [
        "CEREBRAS_API_KEY"
      ],
      "ownerWorkspace": {
        "id": "6a76fa10-e150-4ff6-8f59-a300feec06c1",
        "handle": "botpress",
        "name": "Botpress Team"
      },
      "meta": {
        "views": 0,
        "installs": 0
      }
    }
  },
  "capabilities": [],
  "identity": {
    "name": "default-bot",
    "manual_instructions": "",
    "icon": {
      "type": "emoji",
      "emoji": "ü§ñ ",
      "background_color": "var(--orange-5)"
    },
    "ai_summary": {
      "value": "Chatbot named sparkling-eland provides concise information.",
      "input_hash": "7j8s9",
      "generated_at": "2025-02-26T18:41:46.789Z",
      "version": "1.0.0"
    }
  },
  "plugins": []
}